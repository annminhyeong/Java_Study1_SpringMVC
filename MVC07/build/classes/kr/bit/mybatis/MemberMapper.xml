<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper가 여러개인 경우 이름이 중복될 가능성이 있음-->
<!--namespace를 이용해서 중복을 막을 수 있음(보통 경로명 + 파일 이름으로 설정함)-->
<mapper namespace="kr.bit.mybatis.MemberMapper">
    
  <!--회원 리스트 조회-->
  <select id="memberList" resultType="memberVO">
    select * from member1
  </select>
  
  <!--회원가입 -->
  <insert id="memberInsert" parameterType="memberVO">
      insert into member1(id, pass, name, age, email, phone) 
      values(#{id}, #{pass}, #{name}, #{age}, #{email}, #{phone})
  </insert>
  
  <!--회원가입 파일업로드 -->
  <insert id="memberInsertFile" parameterType="memberVO">
      insert into member1(id, pass, name, age, email, phone, filename) 
      values(#{id}, #{pass}, #{name}, #{age}, #{email}, #{phone}, #{filename})
  </insert>
  
  <!--회원 삭제-->
  <delete id="memberDelete" parameterType="Integer">
      delete from member1 where num = #{num}
  </delete>
  
  <!--회원상세보기-->
  <select id="memberContent" parameterType="Integer" resultType="memberVO">
      select * from member1 where num = #{num}
  </select>
  
  <!--회원 수정하기 -->
  <update id="memberUpdate" parameterType="memberVO">
      update member set age=#{age}, email=#{email}, phone=#{phone} where num = #{num}
  </update>
  
  <!--회원 로그인 -->
  <select id="memberLogin" parameterType="memberVO" resultType="String">
      select name from member1 where id = #{id} and pass = #{pass}
  </select>
  
  <!--아이디 중복체크 -->
  <select id="memberDbCheck" parameterType="String" resultType="String">
      select id from member1 where id = #{id}
  </select>
  
  <!--파일 삭제-->
  <update id="memberDeleteFile" parameterType="int">
      update member1 set filename ='' where num = #{num}
  </update>
  
  <!--파일 업데이트-->
  <update id="memberUpdateFile" parameterType="memberVO">
      update member1 
      set age = #{age}, email = #{email}, phone = #{phone}, filename = #{filename}
      where num = #{num}
  </update>
  
  
  

</mapper>