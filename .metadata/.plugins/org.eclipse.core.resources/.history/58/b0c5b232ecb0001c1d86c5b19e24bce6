package com.spring.myapp03;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

@Controller
public class FileController {
	
	
	//파일업로드 화면
	@RequestMapping("/form")
	public String  uploadForm()
			throws ServletException, IOException {
		
		return "uploadForm";
	}
	
	//파일 업로드 기능
	//첨부파일이 있는경우는 MultipartHttpServletRequest로 받아야함
	//일반 파라미터는 HttpServletRequest로 받음
	@RequestMapping("/upload")
	public String upload(MultipartHttpServletRequest multirequest, HttpServletRequest request) throws Exception {
		
		//업로드 디렉터리
		String UPLOAD_DIR = "repo";
		
		//업로드 디렉터리 실제경로 
		//File.seperator :운영체제의 맞는 경로 구분자를 설정
		String UploadPath = request.getServletContext().getRealPath("") + File.separator + UPLOAD_DIR;
		System.out.println("UploadPath:"+UploadPath);
		
		
		//파라미터 이름, 값저장
		Map<String, Object> map = new HashMap<String, Object>(); //(KEY, Value)
		
		//String id = multirequest.getParameter("id");
		//String name = multirequest.getParameter("name");
		
		//파라미터이름을 ->나열해서 가져온다
		Enumeration<String> e= multirequest.getParameterNames();
		
		//엘리먼트 가지고 있으면 true, 없으면 false
		while(e.hasMoreElements()) {
			String key=e.nextElement();
			String value = multirequest.getParameter(key);
			map.put(key, value);
		}
		
		//파일을 담고있는 파라미터 읽어오기
		Iterator<String> it= multirequest.getFileNames(); //파일의 파라미터이름 (name=file1, name=file2)을 Iterator형태로 가져옴
		
		//다음 엘리먼트 가지고 있으면 true, 없으면 false
		List<String> fileList = new ArrayList<String>();
		while(it.hasNext()) {
			String fileKey =it.next(); //Iterator형태의 파라미터 이름을 하나씩 저장
			MultipartFile mFile =multirequest.getFile(fileKey); //파일 (이름, 타입, 크기 ...)를 저장
			String mFileName=mFile.getOriginalFilename();// 파일이름 가져오기
			
			fileList.add(mFileName); //파일이름 리스트에 추가
			
			//파일을 업로드할 경로를 확인
			File file = new File(UploadPath+"\\"+fileKey);
			
			//만약 파일사이즈가 0보다 크면
			if(mFile.getSize() != 0) {
				
				//파일이 존재하지 않으면
				if(!file.exists()) {
					if(file.getParentFile().mkdirs()) {
						file.createNewFile(); // 임시로 파일을 생성한다.
					}
				}
				mFile.transferTo(new File(UploadPath+"\\"+mFileName)); //파일업로드
			}
		}
		
		map.putIfAbsent("fileList", fileList);
		
		return null;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
